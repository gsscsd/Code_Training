/**
有1000只水桶，其中有且只有一桶装的含有毒药，其余装的都是水。
它们从外观看起来都一样。如果小猪喝了毒药，它会在15分钟内死去。
问题来了，如果需要你在一小时内，弄清楚哪只水桶含有毒药，你最少需要多少只猪？
回答这个问题，并为下列的进阶问题编写一个通用算法。
进阶:
假设有 n 只水桶，猪饮水中毒后会在 m 分钟内死亡，
你需要多少猪（x）就能在 p 分钟内找出“有毒”水桶？n只水桶里有且仅有一只有毒的桶。
*/

/**
解题思路：
二进制编码题目
2018年秋招腾讯的题目
参考：
问题描述：有1000桶酒，其中1桶有毒。而一旦吃了，毒性会在1周后发作。
现在我们用小老鼠做实验，要在1周后找出那桶毒酒，问最少需要多少老鼠。
答案：老鼠个位为：10只， 2^10 = 1024 > 1000

在一小时内最多可以测 5 次水，可以得出 5 种结果（0、1、2、3、4），
所以用 5 进制编号对水桶进行标记，通过计算可得出标记 1000 桶水必须要 5 位的 5 进制数字。
找的方法是，第一次，五只猪在五个位置全喝 0，有毒那瓶编号为 0 的位置就全被喝了，
五只猪哪只死了就证明有毒编号对应位置 是 0，第二次如法炮制，最后便得出有毒药水的编号。 
核心问题是两个，“可以用几进制的编号”、“该编号要多少位才能标记所有的桶？”只要能表示就绝对可以找出来。
拿 5 进制举例，不同长度的 5 进制最 大能表示多少？是 4 乘以 5 的对应次方之和，
例如从第一位开始 4 乘 5 的 0 次方 + 4 乘 5 的 1 次方 + 4 乘 5 的 2 次方 .....，
则 4 位 5 进制最大表示 624，5 位 5 进制最大表示 3124，所以 1000 的答案就是 5。
简化上面的计算公式是 4乘（5的等比数列前 n 项和） > 水桶数 - 1（由于编号可以全是 0，所以水桶数要 - 1），
求 n。进一步求前 n 项和最终得出 5 的 n 次方 > 水桶数。

将限定时间内，小猪可以喝几次水，转化为几进制问题。 
题中给的特例是，60分钟这只猪（如果没死）则可以喝液体5次。也就是说可以转化为5进制
decimal表示几进制，也表示在规定时间内，小猪（如果没死）最多可以喝几次液体。
int decimal = minutesToTest/minutesToDie + 1;
对于特例，1只猪能测试5个桶的液体，两只猪可以测试5^2桶液体。
那么问题转化为需要保证decimal^pig >= buckets。两边取对数log可以转化为pig >= log(decimal)^buckets
int pig = ceil(log(buckets)/log(decimal));
*/


#include <vector>
#include <iostream>
#include <cmath>


using namespace std;


class Solution 
{
    public:
        int poorPigs(int buckets, int minutesToDie, int minutesToTest) 
        {
            // 计算进制
            int decimal = minutesToTest/minutesToDie + 1;
            // 计算最少多少只猪
            int res = ceil(log(buckets) / log(decimal));
            return res;
        }
};
